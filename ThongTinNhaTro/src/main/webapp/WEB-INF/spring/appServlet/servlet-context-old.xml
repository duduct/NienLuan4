<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="vn.com.nhatro" />

	<!-- JDBC Data Source -->
	<beans:bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver">
		</beans:property>
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/nhatro">
		</beans:property>
		<beans:property name="username" value="root"></beans:property>
		<beans:property name="password" value=""></beans:property>
	</beans:bean>
	<!-- Hibernate Session Factory -->
	<beans:bean id="mySessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="myDataSource" />
		<beans:property name="packagesToScan">
			<beans:array>
				<beans:value>vn.com.nhatro</beans:value>
			</beans:array>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Hibernate Transaction Manager -->
	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="mySessionFactory" />
	</beans:bean>


	<tx:annotation-driven transaction-manager="transactionManager" />
	<beans:bean id="jacksonMessageChanger"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<beans:property name="messageConverters">
			<util:list id="beanList">
				<beans:ref bean="jacksonMessageChanger" />
			</util:list>
		</beans:property>
	</beans:bean>
</beans:beans>
